# Use C++14 as a default language.
build:linux --cxxopt=-std=c++14
build:linux --host_cxxopt=-std=c++14
build:android --cxxopt=-std=c++14
build:android --host_cxxopt=-std=c++14
build:windows --cxxopt=/std:c++14
build:windows --host_cxxopt=/std:c++14
test:linux --cxxopt=-std=c++14
test:linux --host_cxxopt=-std=c++14
test:android --cxxopt=-std=c++14
test:android --host_cxxopt=-std=c++14
test:windows --cxxopt=/std:c++14
test:windows --host_cxxopt=/std:c++14

# Suppress C++ compiler warnings
build:linux --copt=-w
build:linux --host_copt=-w
build:android --copt=-w
build:android --host_copt=-w
build:windows --copt=/W0
test:linux --copt=-w
test:linux --host_copt=-w
test:android --copt=-w
test:android --host_copt=-w
test:windows --copt=/W0

# Band build config for backend setting.
build:tflite --define tflite=true
build:tflite --copt=-DBAND_TFLITE
build:tflite --cxxopt=-DBAND_TFLITE
build:tflite --action_env BAND_TFLITE=true
test:tflite --define tflite=true
test:tflite --copt=-DBAND_TFLITE
test:tflite --cxxopt=-DBAND_TFLITE

# Linux build config for Band Engine.
build:linux_k8 --config=linux
build:linux_k8 --cpu=k8
build:linux_k8_tflite --config=linux_k8
build:linux_k8_tflite --config=tflite

# Linux test config for Band Engine.
test:linux_k8 --config=linux
test:linux_k8 --cpu=k8
test:linux_k8_tflite --config=linux_k8
test:linux_k8_tflite --config=tflite

# Android build config for Band Engine.
build:android --crosstool_top=//external:android/crosstool
build:android --host_crosstool_top=@bazel_tools//tools/cpp:toolchain
build:android_arm64 --config=android
build:android_arm64 --cpu=arm64-v8a
build:android_arm64 --fat_apk_cpu=arm64-v8a
build:android_arm64_tflite --config=android_arm64
build:android_arm64_tflite --config=tflite
# List all backends
build:android_arm64_all --config=tflite

# Android test config for Band Engine.
test:android_arm64 --config=android
test:android_arm64 --cpu=arm64-v8a
test:android_arm64 --fat_apk_cpu=arm64-v8a
test:android_arm64_tflite --config=android_arm64
test:android_arm64_tflite --config=tflite

build:windows --copt=/D_USE_MATH_DEFINES
build:windows --host_copt=/D_USE_MATH_DEFINES
build:windows --config=monolithic
build:windows --copt=-DWIN32_LEAN_AND_MEAN
build:windows --host_copt=-DWIN32_LEAN_AND_MEAN
build:windows --copt=-DNOGDI
build:windows --host_copt=-DNOGDI
# MSVC (Windows): Standards-conformant preprocessor mode
build:windows --copt=/Zc:preprocessor
build:windows --host_copt=/Zc:preprocessor
# Misc build options we need for windows.
build:windows --linkopt=/OPT:REF
build:windows --host_linkopt=/OPT:REF
build:windows --linkopt=/OPT:ICF
build:windows --host_linkopt=/OPT:ICF
build:windows --verbose_failures
# Work around potential issues with large command lines on windows.
build:windows --features=compiler_param_file
# On windows, we never cross compile
build:windows --distinct_host_configuration=false
test:windows --enable_runfiles

try-import %workspace%/.band_android_config.bazelrc
try-import %workspace%/.tflite_config.bazelrc
